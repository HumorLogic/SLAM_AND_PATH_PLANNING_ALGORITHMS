#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage{amssymb}
\usepackage{color}
\usepackage{listings}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\lstset{
      language=Matlab,
      float=hbp,
      basicstyle=\footnotesize\ttfamily,
      identifierstyle=\color{colIdentifier},
      keywordstyle=\color{colKeys},
      stringstyle=\color{colString},
      commentstyle=\itshape\color{colComments},
      columns=fixed,
      tabsize=4,
      frame=single,
      framerule=1pt,
      extendedchars=true,
      showspaces=false,
      showstringspaces=false,
      numbers=left,
      numberstyle=\tiny\ttfamily,
      numbersep=1em,
      breaklines=true,
      breakindent=10pt,
      backgroundcolor=\color{hellgelb},
      breakautoindent=true,
      captionpos=t,
      xleftmargin=1em,
      xrightmargin=\fboxsep
}
\usepackage{lscape}
\usepackage{amsmath}
\usepackage{pifont}
\usepackage{color}

\delimitershortfall=-1pt
\let\Right\right
\let\Left\left
\makeatletter
\def\right#1{\Right#1\@ifnextchar){\!\right}{}}
\def\left#1{\Left#1\@ifnextchar({\!\left}{}}
\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 25mm
\topmargin 25mm
\rightmargin 25mm
\bottommargin 25mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Robot's coordinates in the global reference frame
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig01.pdf
	lyxscale 25
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given:
\end_layout

\begin_layout Standard
\noindent
\align left
The robot's initial pose, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(x_0, 
\backslash
, y_0, 
\backslash
, 
\backslash
theta_0
\backslash
right)$
\end_layout

\end_inset

, and the wheels' angular velocities 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(
\backslash
omega_l, 
\backslash
, 
\backslash
omega_r)$
\end_layout

\end_inset

, the following expressions can be derived:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
alpha 
\backslash
, &= 
\backslash
, 
\backslash
omega 
\backslash
, t
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

r 
\backslash
, &= 
\backslash
, 
\backslash
left(Rs 
\backslash
, + 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
alpha
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

l 
\backslash
, &= 
\backslash
, 
\backslash
left(Rs 
\backslash
, - 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
alpha
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
dot{r} 
\backslash
, &= 
\backslash
, 
\backslash
left(Rs 
\backslash
, + 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
dot{
\backslash
alpha} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, v_r 
\backslash
, = 
\backslash
, 
\backslash
left(Rs 
\backslash
, + 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
omega
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout


\backslash
dot{l} 
\backslash
, &= 
\backslash
, 
\backslash
left(Rs 
\backslash
, - 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
dot{
\backslash
alpha} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, v_l 
\backslash
, = 
\backslash
, 
\backslash
left(Rs 
\backslash
, - 
\backslash
, 
\backslash
frac{W}{2} 
\backslash
right) 
\backslash
, 
\backslash
omega 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
omega 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, - 
\backslash
, v_l}{W}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Rs 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{2 
\backslash
, 
\backslash
omega} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{v}{
\backslash
omega} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{W}{2} 
\backslash
, 
\backslash
left( 
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{v_r 
\backslash
, - 
\backslash
, v_l} 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Summary:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
omega 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, - 
\backslash
, v_l}{W}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

v 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Rs 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v}{
\backslash
omega} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{W}{2} 
\backslash
, 
\backslash
left(
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{v_r 
\backslash
, - 
\backslash
, v_l}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Distance travelled by each wheel:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

D_r 
\backslash
, &= 
\backslash
, r_w 
\backslash
, 
\backslash
phi_r
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

D_l 
\backslash
, &= 
\backslash
, r_w 
\backslash
, 
\backslash
phi_l
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
dot{D_r} 
\backslash
, &= 
\backslash
, r_w 
\backslash
, 
\backslash
dot{
\backslash
phi_r} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, v_r 
\backslash
, = 
\backslash
, r_w 
\backslash
, 
\backslash
omega_r
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
dot{D_l} 
\backslash
, &= 
\backslash
, r_w 
\backslash
, 
\backslash
dot{
\backslash
phi_l} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, v_l 
\backslash
, = 
\backslash
, r_w 
\backslash
, 
\backslash
omega_l
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, finally:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
omega 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, - 
\backslash
, v_l}{W} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{r_w}{W} 
\backslash
, 
\backslash
left(
\backslash
omega_r 
\backslash
, - 
\backslash
, 
\backslash
omega_l 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

v 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{2} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{r_w}{2} 
\backslash
, 
\backslash
left(
\backslash
omega_r 
\backslash
, + 
\backslash
, 
\backslash
omega_l
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Rs 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{v}{
\backslash
omega} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{W}{2} 
\backslash
, 
\backslash
left(
\backslash
dfrac{v_r 
\backslash
, + 
\backslash
, v_l}{v_r 
\backslash
, - 
\backslash
, v_l}
\backslash
right)  
\backslash
, = 
\backslash
, 
\backslash
dfrac{W}{2} 
\backslash
, 
\backslash
left( 
\backslash
dfrac{
\backslash
omega_r 
\backslash
, + 
\backslash
, 
\backslash
omega_l}{
\backslash
omega_r 
\backslash
, - 
\backslash
, 
\backslash
omega_l} 
\backslash
right) 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x_l 
\backslash
, &= 
\backslash
, x 
\backslash
, + 
\backslash
, sd 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_l 
\backslash
, &= 
\backslash
, y 
\backslash
, + 
\backslash
, sd 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(u 
\backslash
, 
\backslash
pm 
\backslash
, v
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
cos u 
\backslash
, 
\backslash
cos v 
\backslash
, 
\backslash
mp 
\backslash
, 
\backslash
sin u 
\backslash
, 
\backslash
sin v
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sin
\backslash
left(u 
\backslash
, 
\backslash
pm 
\backslash
, v
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
sin u 
\backslash
, 
\backslash
cos v 
\backslash
, 
\backslash
pm 
\backslash
, 
\backslash
cos u 
\backslash
, 
\backslash
sin v
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(u 
\backslash
, - 
\backslash
, v
\backslash
right) - 
\backslash
cos
\backslash
left(u 
\backslash
, + 
\backslash
, v
\backslash
right) 
\backslash
, = 
\backslash
, 2 
\backslash
, 
\backslash
sin
\backslash
left(u
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(v
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sin
\backslash
left(u 
\backslash
, + 
\backslash
, v
\backslash
right) - 
\backslash
sin
\backslash
left(u 
\backslash
, - 
\backslash
, v
\backslash
right) 
\backslash
, = 
\backslash
, 2 
\backslash
, 
\backslash
cos
\backslash
left(u
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(v
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Ch 
\backslash
, = 
\backslash
, 2 
\backslash
, Rs 
\backslash
, sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x 
\backslash
, &= 
\backslash
, x_0 
\backslash
, + 
\backslash
, x_{@} 
\backslash
, + 
\backslash
, x_{
\backslash
#}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, x' 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0
\backslash
right) 
\backslash
, + 
\backslash
, y' 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0
\backslash
right) + 
\backslash
, Ch 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0
\backslash
right) - 
\backslash
, Ch 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

& = 
\backslash
, x_0 
\backslash
, + 
\backslash
, 2 
\backslash
, Rs 
\backslash
, sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

& = 
\backslash
, x_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
left( 
\backslash
sin 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right) - 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
right) 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

v_x 
\backslash
, = 
\backslash
, 
\backslash
dot{x} 
\backslash
, &= 
\backslash
, Rs 
\backslash
, 
\backslash
omega 
\backslash
, 
\backslash
cos 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, v 
\backslash
, 
\backslash
cos 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

y 
\backslash
, &= 
\backslash
, y_0 
\backslash
, + 
\backslash
, y_{@} 
\backslash
, + 
\backslash
, y_{
\backslash
#}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, x' 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right) 
\backslash
, + 
\backslash
, y' 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right) + 
\backslash
, Ch 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right) + 
\backslash
, Ch 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Ch 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&=
\backslash
, y_0 
\backslash
, + 
\backslash
, 2 
\backslash
, Rs 
\backslash
, sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&=
\backslash
, y_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
left( cos 
\backslash
left( 
\backslash
theta_0 
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right) 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

v_y 
\backslash
, = 
\backslash
, 
\backslash
dot{y} 
\backslash
, &= 
\backslash
, Rs 
\backslash
, 
\backslash
omega 
\backslash
, 
\backslash
sin 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, v 
\backslash
, 
\backslash
sin 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another way to calculate the robot's coordinates in the global reference
 frame:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x_c 
\backslash
, &= 
\backslash
, x_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ} 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, - 
\backslash
, Rs 
\backslash
, sin 
\backslash
left( 
\backslash
theta_0 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_c 
\backslash
, &= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 90^{
\backslash
circ} 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x_c 
\backslash
, &= 
\backslash
, x 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
, + 
\backslash
, 90^{
\backslash
circ} 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x 
\backslash
, - 
\backslash
, Rs 
\backslash
, sin 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_c 
\backslash
, &= 
\backslash
, y 
\backslash
, + 
\backslash
, Rs 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
, + 
\backslash
, 90^{
\backslash
circ} 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
cos
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x 
\backslash
, &= 
\backslash
, x_c 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, - 
\backslash
, Rs 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right) 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
sin 
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
left( 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_0 
\backslash
right) 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, x_0 
\backslash
, + 
\backslash
, 2 
\backslash
, Rs 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

y 
\backslash
, &= 
\backslash
, y_c 
\backslash
, - 
\backslash
, Rs 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Rs 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
right) - 
\backslash
, Rs 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, Rs 
\backslash
, 
\backslash
left( 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
cos 
\backslash
left( 
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
alpha 
\backslash
right) 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, y_0 
\backslash
, + 
\backslash
, 2 
\backslash
, Rs 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0 
\backslash
, + 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right) 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
dfrac{
\backslash
alpha}{2}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For completeness, let's considerate the case when the robot is located at
 the pose 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(x_0, 
\backslash
, y_0, 
\backslash
, 
\backslash
theta_0
\backslash
right)$
\end_layout

\end_inset

 and wants to get to the pose 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(x, 
\backslash
, y, 
\backslash
, 
\backslash
theta
\backslash
right)$
\end_layout

\end_inset

, i.e, any pose known in advanced in the robot's environment.
 The easiest way to move between these two points is by describing and arc.
\end_layout

\begin_layout Standard
But, what is the turning radius, i.e 
\begin_inset ERT
status open

\begin_layout Plain Layout

$Rs$
\end_layout

\end_inset

, that allows the robot to describe that arc?
\end_layout

\begin_layout Standard
As the first figure depicts, the initial and final poses are linked by the
 chord 
\begin_inset ERT
status open

\begin_layout Plain Layout

$Ch$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Delta x 
\backslash
, &= 
\backslash
, x 
\backslash
, - 
\backslash
, x_0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
Delta y 
\backslash
, &= 
\backslash
, y 
\backslash
, - 
\backslash
, x_0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Ch^2 
\backslash
, &= 
\backslash
, {
\backslash
Delta x}^2 
\backslash
, + 
\backslash
, {
\backslash
Delta y}^2 
\backslash
, = 
\backslash
, x'^2 
\backslash
, + 
\backslash
, y'^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The heading error, i.e, the difference between the chord's angle and the
 robot's orientation is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
theta_{err} 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{
\backslash
alpha}{2} 
\backslash
, = 
\backslash
, 
\backslash
arctan 
\backslash
left( 
\backslash
dfrac{
\backslash
Delta 
\backslash
, y}{
\backslash
Delta x} 
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
theta_0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, the turning radius (with sign) 
\begin_inset ERT
status open

\begin_layout Plain Layout

$Rs$
\end_layout

\end_inset

 can be computed, geometrically, as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Rs 
\backslash
, &= 
\backslash
, d 
\backslash
, + 
\backslash
, y'
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Rs^2 
\backslash
, &= 
\backslash
, d^2 
\backslash
, + 
\backslash
, x'^2 
\backslash
, = 
\backslash
, (Rs 
\backslash
, - 
\backslash
, y')^2 
\backslash
, + 
\backslash
, x'^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Also:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

y' 
\backslash
, &= 
\backslash
, Ch 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_{err} 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Rs^2 
\backslash
, &= 
\backslash
, 
\backslash
left( Rs 
\backslash
, - 
\backslash
, y' 
\backslash
right)^2 
\backslash
, + 
\backslash
, x'^2 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, Rs^2 
\backslash
, + 
\backslash
, y'^2 
\backslash
, - 
\backslash
, 2 
\backslash
, Rs 
\backslash
, y' + x'^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, Rs^2 
\backslash
, + 
\backslash
, Ch^2 
\backslash
, - 
\backslash
, 2 
\backslash
, Rs 
\backslash
,y'
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Rs 
\backslash
, &= 
\backslash
, 
\backslash
dfrac{Ch^2}{2 
\backslash
, y'} 
\backslash
, = 
\backslash
, 
\backslash
dfrac{Ch^2}{2 
\backslash
, Ch 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_{err} 
\backslash
right)} 
\backslash
,= 
\backslash
, 
\backslash
dfrac{Ch}{2 
\backslash
, 
\backslash
sin 
\backslash
left( 
\backslash
theta_{err} 
\backslash
right)}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Robot's coordinates in the global reference frame
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig02.pdf
	lyxscale 25
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given the robot's initial pose, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(x_0, 
\backslash
, y_0, 
\backslash
, 
\backslash
theta_0
\backslash
right)$
\end_layout

\end_inset

, and the motion commands, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(l, 
\backslash
, r)$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x 
\backslash
,&=
\backslash
, x_0 
\backslash
, + 
\backslash
, l 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta_0
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y 
\backslash
,&=
\backslash
, y_0 
\backslash
, + 
\backslash
, l 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta_0
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

x_l 
\backslash
,&=
\backslash
, x 
\backslash
, + 
\backslash
, sd 
\backslash
, 
\backslash
cos
\backslash
left(
\backslash
theta
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_l 
\backslash
,&=
\backslash
, y 
\backslash
, + 
\backslash
, sd 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
theta
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
